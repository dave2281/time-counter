{
  "version": 3,
  "sources": ["../../javascript/deed_show.js"],
  "sourcesContent": ["// Deed show page functionality\nlet timerUpdateInterval = null;\nlet startTime = null;\n\n// Global click handler for description toggle - simple and reliable\ndocument.addEventListener('click', function(e) {\n  const toggleBtn = e.target.closest('.toggle-description-btn');\n  if (toggleBtn) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('\uD83D\uDD18 Toggle button clicked!');\n    \n    const content = document.getElementById('description-content');\n    const arrow = document.getElementById('description-arrow');\n    \n    if (!content || !arrow) {\n      console.error('\u274C Description elements not found!');\n      return;\n    }\n    \n    // Toggle based on current DOM state\n    const isHidden = content.classList.contains('description-hidden');\n    console.log('Current state - Hidden:', isHidden);\n    \n    if (isHidden) {\n      // Open\n      content.classList.remove('description-hidden');\n      content.style.height = 'auto';\n      arrow.style.transform = 'rotate(180deg)';\n      console.log('\u2705 Description OPENED');\n    } else {\n      // Close\n      content.classList.add('description-hidden');\n      content.style.height = '0';\n      arrow.style.transform = 'rotate(0deg)';\n      console.log('\u2705 Description CLOSED');\n    }\n  }\n});\n\nfunction initDeedShowPage() {\n  console.log('\uD83D\uDE80 Initializing deed show page...');\n\n  // Initialize toggle status indicator\n  const checkbox = document.querySelector('input[type=\"checkbox\"][id*=\"finished\"]');\n  if (checkbox) {\n    checkbox.addEventListener('change', function() {\n      toggleStatusIndicator(this);\n    });\n  }\n\n  // Auto-show description on page load\n  setTimeout(() => {\n    const descContent = document.getElementById('description-content');\n    const arrow = document.getElementById('description-arrow');\n    \n    if (descContent && descContent.classList.contains('description-hidden')) {\n      console.log('\uD83D\uDE80 Auto-opening description on page load');\n      descContent.classList.remove('description-hidden');\n      descContent.style.height = 'auto';\n      if (arrow) arrow.style.transform = 'rotate(180deg)';\n    }\n  }, 100);\n\n  // Initialize timer functionality\n  initTimer();\n  \n  console.log('\u2705 Deed show page initialized');\n}\n\nfunction toggleStatusIndicator(checkbox) {\n  const text = document.getElementById('status-text');\n  const submitBtn = checkbox.form.querySelector('input[type=\"submit\"]');\n  \n  if (checkbox.checked) {\n    text.textContent = 'Done';\n    submitBtn.textContent = 'Complete';\n    submitBtn.className = 'px-4 py-1.5 bg-green-600 hover:bg-green-700 text-white font-medium rounded-md transition-colors text-xs hover-lift';\n  } else {\n    text.textContent = 'Mark Done';\n    submitBtn.textContent = 'Update';\n    submitBtn.className = 'px-4 py-1.5 bg-green-600 hover:bg-green-700 text-white font-medium rounded-md transition-colors text-xs hover-lift';\n  }\n}\n\nfunction toggleDescription() {\n  console.log('toggleDescription called, current state:', isDescriptionOpen);\n  \n  const content = document.getElementById('description-content');\n  const arrow = document.getElementById('description-arrow');\n  \n  if (!content || !arrow) {\n    console.error('Description elements not found');\n    return;\n  }\n  \n  // Check actual state from DOM\n  const isActuallyHidden = content.classList.contains('description-hidden');\n  console.log('DOM state - isHidden:', isActuallyHidden);\n  \n  if (isActuallyHidden) {\n    // Open\n    content.classList.remove('description-hidden');\n    content.style.height = 'auto';\n    arrow.style.transform = 'rotate(180deg)';\n    isDescriptionOpen = true;\n    console.log('Description opened');\n  } else {\n    // Close\n    content.classList.add('description-hidden');\n    content.style.height = '0';\n    arrow.style.transform = 'rotate(0deg)';\n    isDescriptionOpen = false;\n    console.log('Description closed');\n  }\n}\n\nfunction initTimer() {\n  const startBtn = document.getElementById('start-timer');\n  const stopBtn = document.getElementById('stop-timer');\n  const display = document.getElementById('timer-display');\n  const indicator = document.getElementById('timer-indicator');\n\n  if (startBtn) {\n    startBtn.addEventListener('click', function() {\n      const deedId = this.dataset.deedId;\n      startTimer(deedId);\n    });\n  }\n\n  if (stopBtn) {\n    stopBtn.addEventListener('click', function() {\n      const deedId = this.dataset.deedId;\n      stopTimer(deedId);\n    });\n  }\n\n  checkTimerStatus();\n}\n\nfunction startTimer(deedId) {  \n  fetch(`/daily_logs/start_timer`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': document.querySelector('[name=\"csrf-token\"]').content\n    },\n    body: JSON.stringify({ deed_id: deedId })\n  })\n  .then(response => response.json())\n  .then(data => {\n    if (data.success) {\n      startTime = new Date(data.start_time);\n      \n      updateTimerUI(true);\n      updateTimerDisplay();\n      startTimerUpdates();\n    } else {\n      alert('Failed to start timer: ' + (data.error || 'Unknown error'));\n    }\n  })\n  .catch(error => {\n    alert('Error starting timer. Please try again.');\n  });\n}\n\nfunction stopTimer(deedId) {\n  \n  fetch(`/daily_logs/stop_timer`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': document.querySelector('[name=\"csrf-token\"]').content\n    },\n    body: JSON.stringify({ deed_id: deedId })\n  })\n  .then(response => response.json())\n  .then(data => {\n    if (data.success) {\n      clearInterval(timerUpdateInterval);\n      timerUpdateInterval = null;\n      startTime = null;\n      \n      updateTimerUI(false);\n      \n      if (data.total_time) {\n        const totalTimeEl = document.getElementById('total-time');\n        if (totalTimeEl) totalTimeEl.textContent = data.total_time;\n      }\n      if (data.today_time) {\n        const todayTimeEl = document.getElementById('today-time');\n        if (todayTimeEl) todayTimeEl.textContent = data.today_time;\n      }\n      \n      const display = document.getElementById('timer-display');\n      if (display) display.textContent = '00:00:00';\n      \n      console.log('Timer stopped successfully');\n    } else {\n      console.error('Failed to stop timer:', data.error);\n      alert('Failed to stop timer: ' + (data.error || 'Unknown error'));\n    }\n  })\n  .catch(error => {\n    console.error('Error stopping timer:', error);\n    alert('Error stopping timer. Please try again.');\n  });\n}\n\nfunction checkTimerStatus() {\n  const deedId = document.getElementById('start-timer')?.dataset.deedId;\n  if (!deedId) return;\n\n  fetch(`/daily_logs/timer_status?deed_id=${deedId}`)\n  .then(response => response.json())\n  .then(data => {\n    if (data.running) {\n      startTime = new Date(data.start_time);\n      updateTimerDisplay();\n      startTimerUpdates();\n      updateTimerUI(true);\n    }\n  });\n}\n\nfunction startTimerUpdates() {\n  timerUpdateInterval = setInterval(updateTimerDisplay, 1000);\n}\n\nfunction updateTimerDisplay() {\n  if (!startTime) return;\n  \n  const now = new Date();\n  const elapsed = Math.floor((now - startTime) / 1000);\n  \n  const hours = Math.floor(elapsed / 3600);\n  const minutes = Math.floor((elapsed % 3600) / 60);\n  const seconds = elapsed % 60;\n  \n  const display = document.getElementById('timer-display');\n  if (display) {\n    display.textContent = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  }\n}\n\nfunction updateTimerUI(isRunning) {\n  console.log('Updating timer UI, isRunning:', isRunning);\n  \n  const startBtn = document.getElementById('start-timer');\n  const stopBtn = document.getElementById('stop-timer');\n  const indicator = document.getElementById('timer-indicator');\n  \n  if (isRunning) {\n    if (startBtn) {\n      startBtn.style.display = 'none';\n      startBtn.disabled = true;\n    }\n    if (stopBtn) {\n      stopBtn.style.display = 'inline-block';\n      stopBtn.disabled = false;\n    }\n    if (indicator) {\n      indicator.className = 'w-2 h-2 rounded-full bg-green-500 animate-pulse';\n    }\n    console.log('Timer UI updated to RUNNING state');\n  } else {\n    if (startBtn) {\n      startBtn.style.display = 'inline-block';\n      startBtn.disabled = false;\n    }\n    if (stopBtn) {\n      stopBtn.style.display = 'none';\n      stopBtn.disabled = true;\n    }\n    if (indicator) {\n      indicator.className = 'w-2 h-2 rounded-full bg-red-500';\n    }\n    console.log('Timer UI updated to STOPPED state');\n  }\n}\n\n// Initialize on page load\ndocument.addEventListener('DOMContentLoaded', initDeedShowPage);\ndocument.addEventListener('turbo:load', initDeedShowPage);\n\n// Cleanup on page leave\ndocument.addEventListener('turbo:before-visit', function() {\n  if (timerUpdateInterval) {\n    clearInterval(timerUpdateInterval);\n    timerUpdateInterval = null;\n  }\n});\n\n// Make functions globally available if needed\nwindow.toggleDescription = toggleDescription;\nwindow.toggleStatusIndicator = toggleStatusIndicator;"],
  "mappings": "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",
  "names": []
}
